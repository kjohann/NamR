@page "/list/{ListId:guid}" 

@using NamR.Shared; 
@using NamR.Shared.Models; 
@using System.Linq;
@inject ListClient ListClient

<NamR.Client.Components.Title TitleText="@GetTitle()" />

<div class="@GetNameListsClassNames()">
    <NamR.Client.Components.NameList
        IsGirl="@true"
        Items="@items"
        RemoveOnClick="@OnRemove"
    />
    <NamR.Client.Components.NameList
        IsGirl="@false"
        Items="@items"
        RemoveOnClick="@OnRemove"
    />
</div>

<NamR.Client.Components.AddNameForm ListId="@ListId" OnAdded="@AddItem" />

@code {
    [Parameter]
    public Guid ListId { get; set; }

    private string GetTitle() => items.Select(i => i.IsGirl).Distinct().Count() == 1
        ? items.FirstOrDefault(i => i.IsGirl) != null ? "Min jentenavnliste" : "Min guttenavnliste"
        : "Min navneliste";
    private List<ListItemModel> items { get; set; } = new List<ListItemModel>();
    private string GetNameListsClassNames() =>
        items.Select(i => i.IsGirl).Distinct().Count() == 1 ? "NameLists single" : "NameLists dual";

    protected async override Task OnInitializedAsync()
    {
        //editContext = new EditContext(newItem);
        items = (await ListClient.GetList(ListId)).ToList();
    }

    private void AddItem(ListItemModel model)
    {
        items.Add(model);
        StateHasChanged();
    }

    private async Task OnRemove(ListItemModel item)
    {
        items.Remove(item);
        await ListClient.RemoveItem(item.Id);
        StateHasChanged();
    }
}
